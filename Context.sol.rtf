{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // SPDX-License-Identifier: MIT\
// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\
\
pragma solidity ^0.8.0;\
\
/**\
 * @dev Provides information about the current execution context, including the\
 * sender of the transaction and its data. While these are generally available\
 * via msg.sender and msg.data, they should not be accessed in such a direct\
 * manner, since when dealing with meta-transactions the account sending and\
 * paying for execution may not be the actual sender (as far as an application\
 * is concerned).\
 *\
 * This contract is only required for intermediate, library-like contracts.\
 */\
abstract contract Context \{\
    function _msgSender() internal view virtual returns (address) \{\
        return msg.sender;\
    \}\
\
    function _msgData() internal view virtual returns (bytes calldata) \{\
        return msg.data;\
    \}\
\}}